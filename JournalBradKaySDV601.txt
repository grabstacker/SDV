Journal Brad Kay GitHub introduction

Some commands based around GitHub

git clone (repository) <-- downloads the repository from github and creates a local copy that can be edited.
git pull --> gets all the latest documents from the github repository
git checkout -b develop --> branches the repository for changes
git add . <-- stages files to be pushed with a commit
git commit -m "message" <-- creates a commit to be qued for push
git remote -v <-- checks for remote urls that are currently set

merging
git checkout master
git merge branchname
git status
git commit -m "message"
git push origin master

$ pwd
/c/Users/Brad-Kay/Documents/LocalGit/JS-bootcamp

Some random node commands
node <-- lists the help files and info about the node software
cd <-- change directory
ls <== list all files in a directory
node (file) <-- runs a file inside the node server

NPM
Node package manager
npm init <-- initialise a new project and setup defaults


Week 2 ****
Am currently working on the tutorials supplied on moodle and learning how to use github with git commands
This is going well and I am feeling alot more confident in git now!

Week 2 second entry ****
Have finished the game proposal on the website blog and added a picture for reference.
Have added the game proposal link here https://bradscode.science.blog/2019/07/25/game-proposal/
This is a draft and will be refined before milestone 1

Week 3 ****
Joined team middle desk and started to brainstorm with the game idea of the team. TeamMiddleDesk
We constructed a wireframe and a test use case and will use this to imp[lement into out own games
and project.]


week 4 ****
Talked to the app developers in class about the class overseas and they gave a small presentation
and walked around the class looking at our work
They show us a safety app they had created with fire and trip safety and talked about unity and the demand
for the jobs in thier country.

Looked into the Wireframe and different terrains and possible setup of the game
inside Unity. This has given me a better idea of how to refine the game proposal
 
 
Wireframes ****
Added two wireframes to the git repository with a mock up of the game style and a more indepth view of the actual gameplay screens in the wireframeMain image.
The images are high resolution so to view correctly must be downloaded from github as the image viewer on github does not automatically strectch to fit 
screen size.

*Possibly need to implement multiplayer and some other features but unsure with my style game if thats nessacary or i can focus on other areas of the games
design
**** Yes multiplayer is a requirement

*clarify with todd the missing features from the storyboard and if they apply to my game type.

12/08/19 class Monday ****
provide a report on top of everything uml functional test table and story board
5 or 6 pages summary on the report with the video talking about experience with report
all of the above stuff put into the document
*Make a navigation controller possibly instead of just linking to the next screen
*Keep naming conventions clear about the object that's being describe in the code.

*Upload everything to github

Model View Controller ****

Game Objects and Classes****
Observer pattern looks for events in the program
*Model
    SceneFocus needs to be tracked
        Dictionary used to keep track of different SceneFocus main, game, win and a list of actions that are able to be made on each scene

        Could use a domain model for representation of the scene    
        one of the elements could be an inventory or high score 
*View
    Scenes --> editing these views

    Gui components in unity accept text inputs etc
    These components have little hooks to merge into the controller to communicate
*Controller
    Classes 
        CommandInput <-- or something
        ButtonEvent
            Has an action associated to the button being clicked
        Super Classes  
            Need to control the program through superclasses like Move--> and MoveLeft--> MoveRight
            Move being the superclass which is inherited from by MoveLeft and MoveRight
        Unity doesn't remember states unless specifically told to.
        * its also tries to run everything at once unless you give it order
        Singleton is a single instance in an application like static classes
